{"version":3,"sources":["Components/Search.js","Components/Main.js","Components/Landing.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","className","id","type","placeholder","onChange","e","handleChange","onKeyPress","handleKeypress","onClick","testClick","Main","APIArray","searchArray","randomExamples","searchResults","useState","apiResults","setApiResults","loaded","setLoaded","custom","setCustom","noResults","setNoResults","results","setResults","newSearch","setNewSearch","useEffect","a","fetch","response","json","data","console","log","thumbnail","path","searchAPI","length","target","value","code","preventDefault","handleSubmit","addActive","currentTarget","childNodes","map","item","name","description","href","rel","alt","src","Landing","to","App","basename","process","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3f2dbf0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Search(props) {\r\n    return (\r\n            <div className='searchArea'>\r\n            <input id='searchVal' type='text' placeholder='Enter a Marvel Character' onChange={(e) => props.handleChange(e)}\r\n            onKeyPress={(e) => props.handleKeypress(e)}></input>\r\n            <button onClick={() => props.testClick()}>Search</button>\r\n            {/* <p>Please enter a valid character name</p> */}\r\n            {/* add something below that will show/hide based on form validation */}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport {useState, useEffect, useRef} from 'react'\r\nimport Search from './Search'\r\n\r\nfunction Main() {\r\n    const [apiResults, setApiResults] = useState({})\r\n    const [loaded, setLoaded] = useState(false)\r\n    const [custom, setCustom] = useState(false)\r\n    const [noResults, setNoResults] = useState(false)\r\n    const [blank, setBlank] = useState(false)\r\n    const [results, setResults] = useState('')\r\n    const [newSearch, setNewSearch] = useState({})\r\n    // const [isActive, setIsActive] = useState(false)\r\n    // const [activeMain, setActiveMain] = useState({\r\n    //     border: 'solid 2px #000',\r\n    //     boxshadow: '0 6px 6px -6px #000',\r\n    //     gridArea: 'main'\r\n    // })\r\n\r\n    let APIArray\r\n    let searchArray\r\n    let randomExamples\r\n    let searchResults\r\n\r\n    //need state to hold results\r\n        //once that state updates, generate cards\r\n    //state for no results\r\n    //state for opening page\r\n    //will need to create a switch for cases based on state\r\n\r\n    useEffect(async () => {\r\n        const response = await fetch('http://gateway.marvel.com/v1/public/characters?&ts=123&apikey=b10a47de745dba309eba50894e1a9841&hash=f982e55609d27090f55b37d0682ce716')\r\n        const data = await response.json();\r\n        APIArray = data.data.results\r\n        setApiResults(APIArray)\r\n        setLoaded(true)\r\n        console.log(APIArray)\r\n        console.log(data.data.results[0].thumbnail.path)\r\n    }, [])\r\n\r\n    const searchAPI = (async () => {\r\n        if(results.length > 1){\r\n            const response = await fetch(`http://gateway.marvel.com/v1/public/characters?nameStartsWith=${results}&ts=123&apikey=b10a47de745dba309eba50894e1a9841&hash=f982e55609d27090f55b37d0682ce716`)\r\n            const data = await response.json();\r\n            console.log(data)\r\n            searchArray = data.data.results\r\n            console.log(searchArray)\r\n            if(searchArray.length === 0){\r\n                console.log('its zero')\r\n                setNoResults(true)\r\n                setCustom(false)\r\n            } else {\r\n                setNewSearch(searchArray)\r\n                setCustom(true)\r\n                setNoResults(false)\r\n            }\r\n        } else {\r\n            console.log('its blank')\r\n        }\r\n\r\n\r\n        // setNewSearch(data.data.results[0].name)\r\n    })\r\n\r\n    function handleChange(e){\r\n        setResults(e.target.value)\r\n        console.log(results)\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n        searchAPI()\r\n    }\r\n\r\n    function handleKeypress(e){\r\n        if(e.code === \"Enter\" || e.code === \"NumpadEnter\"){\r\n            console.log('enter')\r\n            handleSubmit(e)\r\n        }\r\n    }\r\n\r\n\r\n    // function addActive(e){\r\n    //     console.log(e.target.id)\r\n    //     if(e.target.className == 'card'){\r\n    //         e.target.className = 'card active'\r\n    //         //children elements add as well?\r\n    //         e.target.childNodes.className = 'side2 active'\r\n    //         console.log(e.target.childNodes)\r\n    //         console.log(e.target.className)\r\n    //     } else if ( e.target.className == 'card active') {\r\n    //         e.target.className = 'card'\r\n    //     }\r\n    // }\r\n\r\n\r\n    function addActive(e){\r\n        console.log(e.target.id)\r\n        if(e.currentTarget.className == 'card'){\r\n            e.currentTarget.className = 'card active';\r\n            console.log(e.target.childNodes)\r\n            console.log(e.target.childNodes[1])\r\n            console.log(e.target.className)\r\n            e.currentTarget.childNodes[0].className = 'mainBorder cardbkg active'\r\n            e.currentTarget.childNodes[1].className = 'side1 cardbkg active'\r\n            e.currentTarget.childNodes[2].className = 'side2 cardbkg active'\r\n        } else if ( e.currentTarget.className == 'card active') {\r\n            e.currentTarget.className = 'card'\r\n            e.currentTarget.childNodes[0].className = 'mainBorder'\r\n            e.currentTarget.childNodes[1].className = 'side1'\r\n            e.currentTarget.childNodes[2].className = 'side2'\r\n        }\r\n    }\r\n\r\n\r\n    if(!loaded){\r\n        return (\r\n            <div><p>Its loading</p></div>\r\n        )\r\n    } else if (loaded && !custom && !noResults) {\r\n    // randomExamples = apiResults.map(item => <h3 id={item.id} key={item.id} onClick={addActive} className='card' >{item.name} {item.id}</h3>)\r\n    randomExamples = apiResults.map(item =>\r\n    <div id={item.id} key={item.id} onClick={addActive} className='card' >\r\n        <div className='mainBorder'>\r\n        {/* <div> */}\r\n        <h3>{item.name}</h3></div>\r\n        <div className='side1'>\r\n            <h3>Character Description</h3>\r\n        <p>{item.description === '' ? 'Marvel API contained no information' : item.description}</p><a href={`https://marvel.fandom.com/wiki/Special:Search?query=${item.name}&scope=internal&navigationSearch=true`} target=\"_blank\" rel=\"noopener noreferrer\">Find more information</a>\r\n        </div>\r\n        <div className='side2'>\r\n            <img alt='character' src={item.thumbnail.path+'.jpg'}></img>\r\n            {/* <h4 ref={testElement}>{item.id}</h4> */}\r\n            </div>\r\n    </div>)\r\n    //if active is true, classname is card.active if false, just card\r\n    console.log(randomExamples)\r\n    return (\r\n        <div className='container'>\r\n            <Search testClick={searchAPI} handleChange={handleChange} handleKeypress={handleKeypress}/>\r\n            <div className='gallery'>\r\n            {randomExamples}\r\n            </div>\r\n        </div>\r\n    )} else if (custom) {\r\n        searchResults = newSearch.map(item =>\r\n            <div id={item.id} key={item.id} onClick={addActive} className='card' >\r\n                <div className='mainBorder'>\r\n                {/* <div> */}\r\n                <h3>{item.name}</h3></div>\r\n                <div className='side1'>\r\n                    <h3>Character Description</h3>\r\n                <p>{item.description === '' ? 'Marvel API contained no information' : item.description}</p><a href={`https://marvel.fandom.com/wiki/Special:Search?query=${item.name}&scope=internal&navigationSearch=true`} target=\"_blank\" rel=\"noopener noreferrer\">Find more information</a>\r\n                </div>\r\n                <div className='side2'>\r\n                    <img alt='character' src={item.thumbnail.path+'.jpg'}></img>\r\n                    {/* <h4 ref={testElement}>{item.id}</h4> */}\r\n                    </div>\r\n            </div>)\r\n        console.log(newSearch)\r\n        return (\r\n        <div>\r\n        <Search testClick={searchAPI} handleChange={handleChange} handleKeypress={handleKeypress}/>\r\n        <div className='gallery'>\r\n        {searchResults}\r\n        </div>\r\n        </div>\r\n        )\r\n    } else if (noResults) {\r\n        return (\r\n            <div>\r\n            <Search testClick={searchAPI} handleChange={handleChange} handleKeypress={handleKeypress}/>\r\n            <div className='gallery'>\r\n            <p>No results found</p>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Main","import React from 'react'\r\nimport Main from './Main'\r\nimport {Link } from \"react-router-dom\";\r\n\r\nfunction Landing() {\r\n    return (\r\n        <div>\r\n            <h1>Marvel A.P.I.</h1>\r\n            <h2>Enter True Believers</h2>\r\n            {/* <li><Link to=\"/Main\">React</Link></li> */}\r\n            <Link to=\"/Main\"><button>Enter</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing\r\n","import './App.css';\nimport Landing from './Components/Landing'\nimport Main from './Components/Main'\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, HashRouter, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n\n  return (\n    <div className=\"container\">\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Switch>\n     <Route exact path=\"/\" component={Landing} />\n     <Route path=\"/Main\" component={Main} />\n   </Switch>\n   </BrowserRouter>\n   </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}